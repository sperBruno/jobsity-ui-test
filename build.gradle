import net.masterthought.cucumber.Configuration
import net.masterthought.cucumber.ReportBuilder

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'

group = 'jobsity-sample'
version = '1.0-SNAPSHOT'

repositories {
    jcenter()
}
buildscript {
    repositories {
        jcenter()
        maven {
            url "http://repo.bodar.com"
        }
    }

    dependencies {
        classpath 'net.masterthought:cucumber-reporting:5.0.1'
    }
}
dependencies {
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '2.53.0'
    compile group: 'com.jayway.restassured', name: 'rest-assured', version: '2.9.0'
    compile group: 'log4j', name: 'log4j', version: '1.2.17'

    testCompile group: 'info.cukes', name: 'cucumber-java', version: '1.2.4'
    testCompile group: 'info.cukes', name: 'cucumber-junit', version: '1.2.4'
}
configurations {
    cucumberRuntime {
        extendsFrom testRuntime
    }
}
task executeFeatures() {
    dependsOn assemble, compileTestJava
    doLast {

        File file = new File("cucumber-html-report")
        file.delete()
        try {
            javaexec {
                main = "cucumber.api.cli.Main"
                classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
                args = ['--plugin', 'pretty',
                        '--plugin', 'html:build/report/cucumber-html-report',
                        '--plugin', 'json:build/report/cucumber.json',
                        '--plugin', 'rerun:build/report/rerun.txt',
                        '--glue', 'step_definitions', 'src/test/resources/features']
            }
        } catch (Exception e) {
            println("unable to execute task, see the next detail: " + e)
        }
        sleep(5000) // sleep due to cucumber.json is not created too fast
        generateReport("report/cucumber.json", "report/cucumber-html-report")
    }
}

def generateReport(String pathCucumber, String pathReport) {
    try{
        File reportOutputDirectory = new File(pathReport)
        List<String> jsonReportFiles = new ArrayList<>()
        jsonReportFiles.add(pathCucumber)
        String buildProjectName = "Women Dress Shop"
        Configuration configuration = new Configuration(reportOutputDirectory, buildProjectName)
        ReportBuilder reportBuilder = new ReportBuilder(jsonReportFiles, configuration)
        reportBuilder.generateReports()
    }catch(Exception e){

    }

}
